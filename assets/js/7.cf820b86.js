(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(a,e,t){"use strict";t.r(e);var _=t(42),v=Object(_.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),t("h2",{attrs:{id:"文档-doc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档-doc"}},[a._v("#")]),a._v(" 文档 doc")]),a._v(" "),t("p",[a._v("基本结构：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("_index: 文档所属索引标识\n_type: 文档所属类型 7.0.0 后不再支持多类型，约定值：_doc\n_id: 文档ID\n_source: 文档原始JSON文件\n_version: 文档版本信息\n_score: 搜索算分\n")])])]),t("h2",{attrs:{id:"索引-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引-index"}},[a._v("#")]),a._v(" 索引 Index")]),a._v(" "),t("blockquote",[t("p",[a._v("需要注意的是 ES 环境下讨论的"),t("code",[a._v("索引")]),a._v("更多的表示为 SQL 中的 Table 的概念，mapping 对应 SQL 中的表结构定义，doc 意思相近为存储的记录")])]),a._v(" "),t("p",[a._v("ES 使用倒排索引：")]),a._v(" "),t("ul",[t("li",[a._v("单词词典（Term Dictionary）：从文档中拆分出来的单词及其于倒排列表的关联关系，（由于单词词典数据较大，一般会采用B+数或哈希拉链实现）")]),a._v(" "),t("li",[a._v("倒排列表（Posting List）：单词对应在文档中的信息，其包含的倒排索引项如下：\n"),t("ul",[t("li",[a._v("文档ID")]),a._v(" "),t("li",[a._v("词频：单词在文档出现的次数，用于相关性算分")]),a._v(" "),t("li",[a._v("位置：单词在文档中分词的位置，用于语句搜索")]),a._v(" "),t("li",[a._v("偏移：单词出现的开始结束位置")])])])]),a._v(" "),t("p",[a._v("索引相关的基础配置项：")]),a._v(" "),t("ul",[t("li",[a._v("type: 7.0 后一个索引只能创建一个 Type: _doc")]),a._v(" "),t("li",[a._v("mapping: 逻辑上，定义文档的字段名及字段类型，类似 schema 定义")]),a._v(" "),t("li",[a._v("shard: 物理上，索引的数据分散到 Shard 上，类似数据库分片")])]),a._v(" "),t("h2",{attrs:{id:"mapping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapping"}},[a._v("#")]),a._v(" Mapping")]),a._v(" "),t("p",[a._v("Mapping: 类似于 schema，其定义了索引中字段的名称 / 数据类型 / 倒排索引配置")]),a._v(" "),t("ul",[t("li",[a._v("Mapping 将 JSON 文档映射为 Lucene 中的偏平格式")]),a._v(" "),t("li",[a._v("一个文档只属于一个索引 Type，7.0 无需为 Mapping 设置 Type")])]),a._v(" "),t("p",[a._v("Mapping分为动态、静态两类：")]),a._v(" "),t("ul",[t("li",[a._v("动态映射：ES 自动对 doc 的字段进行分词、索引")]),a._v(" "),t("li",[a._v("静态映射：手动配置 doc 的字段映射，包括：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("- 哪些字符串字段应被视为全文字段。\n- 哪些字段包含数字、日期或地理位置。\n- 日期值的格式。\n- 用于控制动态添加字段的映射的自定义规则\n")])])]),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),t("ul",[t("li",[a._v("Text / Keyword")]),a._v(" "),t("li",[a._v("Integer / Float")]),a._v(" "),t("li",[a._v("Date")]),a._v(" "),t("li",[a._v("IPV4 / IPV6")]),a._v(" "),t("li",[a._v("Object")]),a._v(" "),t("li",[a._v("其他：geo_point ...")])]),a._v(" "),t("h3",{attrs:{id:"动态映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态映射"}},[a._v("#")]),a._v(" 动态映射")]),a._v(" "),t("p",[a._v("写入文档时，elasticsearch 可自根据 json 格式自动创建索引，推算 Mapping 类型")]),a._v(" "),t("p",[a._v("对于"),t("code",[a._v("新增字段")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("Dynamic: true  文档写入成功，自动更新 Mapping；")]),a._v(" "),t("li",[a._v("Dynamic: false 文档写入成功，Mapping 不更新，字段无法被用于索引，但可在 _source 中找到相关信息；")]),a._v(" "),t("li",[a._v("Dynamic: strict 文档写入失败；")])]),a._v(" "),t("p",[a._v("对于"),t("code",[a._v("现有字段")]),a._v("：Mapping 字段不可修改，只能通过 reindex 重建索引")]),a._v(" "),t("h3",{attrs:{id:"静态映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态映射"}},[a._v("#")]),a._v(" 静态映射")]),a._v(" "),t("h2",{attrs:{id:"集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[a._v("#")]),a._v(" 集群")]),a._v(" "),t("h4",{attrs:{id:"节点-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点-node"}},[a._v("#")]),a._v(" 节点 Node")]),a._v(" "),t("p",[a._v("一个节点实际即一个运行 ElasticSearch 的实例")]),a._v(" "),t("ul",[t("li",[a._v("Master-eligible Node： Master-eligible 节点有权限参与 master 节点选举，只有master节点可修改集群状态")])]),a._v(" "),t("blockquote",[t("p",[a._v("集群状态信息包括:\n- 节点信息\n- 索引的 Mapping 及 Setting 信息\n- Shard 分片路由信息")])]),a._v(" "),t("ul",[t("li",[a._v("Data Node: 保存分片数据")]),a._v(" "),t("li",[a._v("Coordinating Node: 接受请求，分发至节点处理，聚合结果，默认每个节点都具备 Coordinating Node 职责")]),a._v(" "),t("li",[a._v("Hot & Warm Node: 冷热节点，新数据 Date Node 机器配置较好(Hot Node)，旧数据 不经常用的数据配置性能较差的机器(Warm Node)")])]),a._v(" "),t("p",[a._v("通常生产环境一个节点只分配一个角色")]),a._v(" "),t("h4",{attrs:{id:"分片-shard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分片-shard"}},[a._v("#")]),a._v(" 分片 Shard")]),a._v(" "),t("p",[a._v("一个分片实际即为一个运行 Lucene 的实例")]),a._v(" "),t("ul",[t("li",[a._v("主分片（Primary Shard）：解决数据水平拓展问题，通过主分片将数据分布到集群中的所有节点上，主分片数是创建索引时指定，修改需要 Reindex")]),a._v(" "),t("li",[a._v("副本（Replica Shard）：解决数据高可用问题，为主分片的拷贝，副本分片数可动态调整")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n    "setting": {\n        "index": {\n            "number_of_shards": 3,      // 分片数\n            "number_of_replicas": 1,    // 分片副本数\n        }     \n    }\n}\n')])])]),t("p",[a._v("集群健康状态")]),a._v(" "),t("ul",[t("li",[a._v("Green: 主分片及副本均正常")]),a._v(" "),t("li",[a._v("Yellow: 主分片正常，有副本分片未正常分配")]),a._v(" "),t("li",[a._v("Red：有主分片未能分配")])]),a._v(" "),t("h2",{attrs:{id:"分词-analysis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分词-analysis"}},[a._v("#")]),a._v(" 分词 Analysis")]),a._v(" "),t("p",[a._v("elasticSearch 分词器 Analyzer，分为三部分：")]),a._v(" "),t("ul",[t("li",[a._v("Character Filters: 原始文本处理，如去除 html 标签")]),a._v(" "),t("li",[a._v("Tokenizer: 按规则切分单词，如按空格切分")]),a._v(" "),t("li",[a._v("Token Filter: 处理切分出来的单词，如大写转小写，删除修饰性的词等")])]),a._v(" "),t("p",[a._v("分词器实际做在两个阶段：")]),a._v(" "),t("ul",[t("li",[a._v("文档索引阶段：对文档进行分词及建立索引")]),a._v(" "),t("li",[a._v("搜索阶段：全文检索时，对输入的查询文本进行分词")])]),a._v(" "),t("p",[a._v("绝大多数情况两者使用同一套分词器，特定场景也可指定不同的分词器")]),a._v(" "),t("p",[a._v("常用中文分词器：")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/medcl/elasticsearch-analysis-ik",target:"_blank",rel:"noopener noreferrer"}},[a._v("elasticsearch-analysis-ik"),t("OutboundLink")],1),a._v("：中文分词，支持自定义词库及热更新词库")]),a._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/medcl/elasticsearch-analysis-pinyin",target:"_blank",rel:"noopener noreferrer"}},[a._v("elasticsearch-analysis-pinyin"),t("OutboundLink")],1),a._v("：中文 pinyin 分词")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('# 内置标准分词器\nGET /_analyze\n{\n  "analyzer": "standard", \n  "text": "hello world"\n}\n\n# 中文插件分词器\nGET /_analyze\n{\n  "analyzer": "ik_smart", \n  "text": "朝闻国盛：2019年度医药行业研究策略报告"\n}\n')])])])])}),[],!1,null,null,null);e.default=v.exports}}]);