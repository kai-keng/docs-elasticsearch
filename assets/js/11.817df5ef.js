(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{357:function(t,r,a){"use strict";a.r(r);var e=a(42),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"query-dsl使用入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-dsl使用入门"}},[t._v("#")]),t._v(" Query DSL使用入门")]),t._v(" "),a("h2",{attrs:{id:"get-and-post"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-and-post"}},[t._v("#")]),t._v(" GET and POST")]),t._v(" "),a("p",[t._v("Get表示查询，Post表示添加数据")]),t._v(" "),a("p",[t._v("Get语句可以使用**[index]/_search**查询特定索引下的数据")]),t._v(" "),a("p",[t._v("例-GET：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": "定义核心资产"\n    }\n  }\n}\n')])])]),a("h2",{attrs:{id:"query-和-filter-差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-和-filter-差异"}},[t._v("#")]),t._v(" query 和 filter 差异")]),t._v(" "),a("h3",{attrs:{id:"query-dsl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-dsl"}},[t._v("#")]),t._v(" query DSL")]),t._v(" "),a("p",[t._v("在查询上下文中，查询会回答这个问题——“这个文档匹不匹配这个查询，它的相关度高么？”")]),t._v(" "),a("p",[t._v("如何验证匹配很好理解，如何计算相关度呢？ES中索引的数据都会存储一个_score分值，分值越高就代表越匹配。另外关于某个搜索的分值计算还是很复杂的，因此也需要一定的时间。")]),t._v(" "),a("p",[t._v("查询上下文 是在 使用query进行查询时的执行环境，比如使用search的时候。")]),t._v(" "),a("p",[t._v("一些query的场景：")]),t._v(" "),a("ul",[a("li",[t._v("与full text search的匹配度最高")]),t._v(" "),a("li",[t._v("包含run单词，如果包含这些单词：runs、running、jog、sprint，也被视为包含run单词")]),t._v(" "),a("li",[t._v("包含quick、brown、fox。这些词越接近，这份文档的相关性就越高")])]),t._v(" "),a("h3",{attrs:{id:"filter-dsl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter-dsl"}},[t._v("#")]),t._v(" filter DSL")]),t._v(" "),a("p",[t._v("在过滤器上下文中，查询会回答这个问题——“这个文档匹不匹配？”")]),t._v(" "),a("p",[t._v("答案很简单，是或者不是。它不会去计算任何分值，也不会关心返回的排序问题，因此效率会高一点。")]),t._v(" "),a("p",[t._v("过滤上下文 是在使用filter参数时候的执行环境，比如在bool查询中使用Must_not或者filter")]),t._v(" "),a("p",[t._v("另外，经常使用过滤器，ES会自动的缓存过滤器的内容，这对于查询来说，会提高很多性能。")]),t._v(" "),a("p",[t._v("一些过滤的情况：")]),t._v(" "),a("ul",[a("li",[t._v("创建日期是否在2013-2014年间？")]),t._v(" "),a("li",[t._v("status字段是否为published？")]),t._v(" "),a("li",[t._v("lat_lon字段是否在某个坐标的10公里范围内？")])]),t._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("ol",[a("li",[t._v("filter并不能直接替换query使用，必须包含在"),a("code",[t._v("bool")]),t._v("多条件语句后或者其他关键词下，同时filter下不能使用match，因为它并考虑分词，只是用作过滤，所以可以使用"),a("code",[t._v("range")]),t._v("或者"),a("code",[t._v("term")]),t._v("等")]),t._v(" "),a("li",[t._v("query 和 filter 一起使用的话，filter 会先执行，看本文下面的：多搜索条件组合查询")]),t._v(" "),a("li",[t._v("从搜索结果上看：\n"),a("ul",[a("li",[t._v("filter，只查询出搜索条件的数据，不计算相关度分数")]),t._v(" "),a("li",[t._v("query，查询出搜索条件的数据，并计算相关度分数，按照分数进行倒序排序")])])]),t._v(" "),a("li",[t._v("从性能上看：\n"),a("ul",[a("li",[t._v("filter（性能更好，无排序），无需计算相关度分数，也就无需排序，内置的自动缓存最常使用查询结果的数据")]),t._v(" "),a("li",[t._v("query（性能较差，有排序），要计算相关度分数，按照分数进行倒序排序，没有缓存结果的功能")]),t._v(" "),a("li",[t._v("filter 和 query 一起使用可以兼顾两者的特性，所以看你业务需求")])])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/guide/current/_queries_and_filters.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网文档"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("例-query：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": "定义核心资产"\n    }\n  }\n}\n')])])]),a("p",[t._v("例-filter多条件组合：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "bool": {\n      "must": [\n        {\n          "match": {\n            "rpt_subtit": "定义核心资产"\n          }\n        }\n      ], \n      "filter": {\n        "term": {\n          "rpt_subtit.keyword": "定义核心资产：误区和标准"\n        }\n      }\n    }\n  }\n}\n')])])]),a("h2",{attrs:{id:"bool多搜索条件组合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bool多搜索条件组合查询"}},[t._v("#")]),t._v(" bool多搜索条件组合查询")]),t._v(" "),a("p",[t._v("Bool查询对应Lucene中的BooleanQuery，它由一个或者多个子句组成，每个子句都有特定的类型")]),t._v(" "),a("ul",[a("li",[t._v("must：返回的文档必须满足must子句的条件，并且参与计算分值，类似于=")]),t._v(" "),a("li",[t._v("filter：返回的文档必须满足filter子句的条件。但是不会像Must一样，参与计算分值，类似于=")]),t._v(" "),a("li",[t._v("should：返回的文档可能满足should子句的条件，类似于or\n"),a("ul",[a("li",[t._v("在一个Bool查询中，如果没有must或者filter，有一个或者多个should子句，那么只要满足一个就可以返回")]),t._v(" "),a("li",[t._v("如果一个查询既有filter又有should，那么至少包含一个should子句")]),t._v(" "),a("li",[a("code",[t._v("minimum_should_match")]),t._v("参数定义了至少满足几个子句")])])]),t._v(" "),a("li",[t._v("must_not：返回的文档必须不满足must_not定义的条件，类似于!=")])]),t._v(" "),a("p",[t._v("例-bool多搜索条件组合：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "bool": {\n      "must": [\n        {\n          "match": {\n            "rpt_subtit": "定义核心资产"\n          }\n        }\n      ], \n      "filter": {\n        "term": {\n          "rpt_subtit.keyword": "定义核心资产：误区和标准"\n        }\n      },\n      "should": [\n        {\n          "match": {\n            "rpt_subtit": {\n              "query": "定义核心资产",\n              "operator": "or"\n            }\n          }\n        }\n      ],\n      "must_not": [\n        {\n          "match": {\n            "rpt_subtit": "测试"\n          }\n        }\n      ],\n      "minimum_should_match": 1\n    }\n  }\n}\n')])])]),a("h2",{attrs:{id:"各类查询关键词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各类查询关键词"}},[t._v("#")]),t._v(" 各类查询关键词")]),t._v(" "),a("h3",{attrs:{id:"match-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-all"}},[t._v("#")]),t._v(" match_all")]),t._v(" "),a("ul",[a("li",[t._v("查询所有")])]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match_all": {}\n  }\n}\n')])])]),a("h3",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),a("ul",[a("li",[t._v("full-text search 全文检索，倒排索引")]),t._v(" "),a("li",[t._v("索引中只要有任意一个匹配拆分后词就可以出现在结果中，只是匹配度越高的排越前面")]),t._v(" "),a("li",[t._v("比如查询：PHILIPS toothbrush，会被拆分成两个单词：PHILIPS 和 toothbrush。只要索引中 product_name 中只要含有任意对应单词，都会在搜索结果中，只是如果有数据同时含有这两个单词，则排序在前面")]),t._v(" "),a("li",[t._v("match可以配合"),a("code",[t._v("opeartor")]),t._v("操作符达到和match_phrase一样的效果")]),t._v(" "),a("li",[t._v("还可以使用"),a("code",[t._v("minimum_should_match")]),t._v("选择需要匹配的分词百分比。比如搜索词被分成这样子：java 程序员 书 推荐，这里就有 4 个词，假如要求 50% 命中其中两个词就返回，我们就可以设置"),a("code",[t._v("minimum_should_match")]),t._v("为50%")])]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": {\n        "query": "定义核心资产测试",\n        "operator": "or",\n        "minimum_should_match": "50%"\n      }\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"match-phrase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-phrase"}},[t._v("#")]),t._v(" match_phrase")]),t._v(" "),a("ul",[a("li",[t._v("phrase search 短语搜索")]),t._v(" "),a("li",[t._v("索引中必须同时匹配拆分后词就可以出现在结果中")]),t._v(" "),a("li",[t._v("比如查询：PHILIPS toothbrush，会被拆分成两个单词：PHILIPS 和 toothbrush。索引中必须有同时有这两个单词的才会在结果中")]),t._v(" "),a("li",[t._v("match_phrase还有一个slop参数，因为match_phrase的匹配规则比较严格，但是有时候我们往往不需要如此严格的匹配，比如PHILIPS toothbrush，我们可以允许两个词中间穿插着一些其他的词，这样模糊的搜索我们想要的结果，这个时候就可以使用slop参数。slop参数表示的是允许我们的分词中间隔指定词数以下的情况也可以匹配上。比如：slop=5，表示两个分词中穿插5个以内的其他分词，都能被搜索出来。")])]),t._v(" "),a("p",[t._v("例-match_phrase：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match_phrase": {\n      "rpt_subtit": {\n        "query": "定义核心资产"\n      }\n    }\n  }\n}\n')])])]),a("p",[t._v("例-match_phrase-slop：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match_phrase": {\n      "rpt_subtit": {\n        "query": "定义核心资产",\n        "slop": 5\n      }\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"multi-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi-match"}},[t._v("#")]),t._v(" multi_match")]),t._v(" "),a("ul",[a("li",[t._v("查询多字段同时包含某些分词的时候，可以使用")]),t._v(" "),a("li",[t._v("比如查询 product_name 和 product_desc 字段中，只要有：toothbrush 关键字的就查询出来")]),t._v(" "),a("li",[t._v("同时可以使用"),a("code",[t._v("opeartor")]),t._v("来决定是and还是or")])]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "定义核心资产",\n      "fields": [\n        "rpt_subtit", "rpt_summary"\n      ]\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"term"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#term"}},[t._v("#")]),t._v(" term")]),t._v(" "),a("ul",[a("li",[t._v("term 一般用在不分词字段上的，因为它是完全匹配查询，如果要查询的字段是分词字段就会被拆分成各种分词结果，和完全查询的内容就对应不上了")]),t._v(" "),a("li",[t._v("Elasticsearch 5.X 之后给 text 类型的分词字段，又默认新增了一个子字段 keyword，这个字段的类型就是 keyword，是不分词的，默认保留 256 个字符。假设 product_name 是分词字段，那有一个 product_name.keyword 是不分词的字段，可以利用这个子字段来做完全匹配查询")])]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "term": {\n      "rpt_subtit.keyword": "定义核心资产：误区和标准"\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"terms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terms"}},[t._v("#")]),t._v(" terms")]),t._v(" "),a("ul",[a("li",[t._v("同上term，区别在于类似于数据库的 in")])]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "terms": {\n      "rpt_subtit.keyword": [\n        "定义核心资产：误区和标准",\n        "5G标准落定，贸易摩擦风波未平，通信板块仍处寻底过程"\n      ]\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"range"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#range"}},[t._v("#")]),t._v(" range")]),t._v(" "),a("ul",[a("li",[t._v("range 用法，查询数值、时间区间")])]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "range": {\n      "custom_report": {\n        "gt": 0,\n        "lte": 1\n      }\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"分页-from-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页-from-size"}},[t._v("#")]),t._v(" 分页- from, size")]),t._v(" "),a("p",[t._v("可以使用"),a("code",[t._v("size")]),t._v("，"),a("code",[t._v("from")]),t._v("关键词来做搜索分页")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "定义核心资产",\n      "fields": [\n        "rpt_subtit", "rpt_summary"\n      ]\n    }\n  },\n  "size": 1,\n  "from": 0\n}\n')])])]),a("h3",{attrs:{id:"高亮搜索-highlight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高亮搜索-highlight"}},[t._v("#")]),t._v(" 高亮搜索-highlight")]),t._v(" "),a("p",[t._v("可以对搜索结果中的分词进行高亮显示，用em标签包裹")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": "定义核心资产"\n    }\n  },\n  "highlight": {\n    "fields": {\n      "rpt_subtit": {}\n    }\n  }\n}\n')])])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('"highlight" : {\n  "rpt_subtit" : [\n    "<em>定</em><em>义</em><em>核</em><em>心</em><em>资</em><em>产</em>：误区和标准"\n  ]\n}\n')])])]),a("h3",{attrs:{id:"指定查询结果字段-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定查询结果字段-source"}},[t._v("#")]),t._v(" 指定查询结果字段-_source")]),t._v(" "),a("p",[t._v("可以使用_source指定返回字段")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": "定义核心资产"\n    }\n  },\n  "_source": [\n    "rpt_subtit",\n    "author_names"\n  ]\n}\n')])])]),a("h3",{attrs:{id:"boost指定权重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boost指定权重"}},[t._v("#")]),t._v(" boost指定权重")]),t._v(" "),a("p",[t._v("在搜索中可以使用boost来指定不同搜索条件的权重，权重高的优先于权重低的")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "bool": {\n      "should": [\n        {\n          "match": {\n            "rpt_subtit": {\n              "query": "定义核心资产",\n              "boost": 2\n            }\n          }\n        },\n        {\n          "match": {\n            "rpt_subtit": {\n              "query": "央行重启逆回购",\n              "boost": 1\n            }\n          }\n        }\n      ],\n      "minimum_should_match": 1\n    }\n  }\n}\n')])])]),a("h3",{attrs:{id:"sort-排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort-排序"}},[t._v("#")]),t._v(" sort 排序")]),t._v(" "),a("ul",[a("li",[t._v("ES支持查询排序，可以选择文档字段进行升序或降序排列")]),t._v(" "),a("li",[t._v("如果你想要使用数组字段进行排序，那必须要配合mode字段，选择模式来排序，mode支持"),a("code",[t._v("min")]),t._v("、"),a("code",[t._v("max")]),t._v("、"),a("code",[t._v("avg")]),t._v("，"),a("code",[t._v("sum")])])]),t._v(" "),a("p",[t._v("例-普通排序:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": "定义核心资产"\n    }\n  },\n  "sort": [\n    {\n      "rpt_subtit": { "order", "asc" }\n    },\n    {\n      "author_names": { "order", "desc" }\n    }\n  ]\n}\n')])])]),a("p",[t._v("例-多字段值排序：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('GET ri_search_reports/_search\n{\n  "query": {\n    "match": {\n      "rpt_subtit": "定义核心资产"\n    }\n  },\n  "sort": [\n    {\n      "test": {"order" : "asc", "mode": "min"}\n    }\n  ]\n}\n')])])]),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/jiaminbao/article/details/80105636?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch DSL 常用语法介绍"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_29580525/article/details/80908523",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES中的Query与Filter的区别"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);